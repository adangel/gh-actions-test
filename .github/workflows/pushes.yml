name: Pushes
on:
  push:
    branches:
      - main
      - master
  schedule:
    # build it monthly: At 04:00 on day-of-month 1.
    - cron:  '0 4 1 * *'
jobs:
  build:
    runs-on: ${{ matrix.os }}
    continue-on-error: false
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        #os: [ ubuntu-latest, windows-latest, macos-latest ]
        os: [ windows-latest ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby 2.7
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.7
      - name: install openjdk
        run: .ci/install-openjdk.sh
        shell: bash
#      - name: Setup tmate session
#        uses: mxschmitt/action-tmate@v3
      - name: run shell script
        run: .ci/display-env.sh
        shell: bash
        env:
          EXAMPLE_KEY: ${{ secrets.EXAMPLE_KEY }}
          GPG_SECRET: ${{ secrets.GPG_SECRET }}
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
      - name: Create build artifact
        run: .ci/build.sh
        shell: bash
      - name: Upload only from linux
        uses: actions/upload-artifact@v2
        if: ${{ runner.os ==  'Linux' }}
        with:
          name: binary-artifact
          path: target/artifact-bin.zip
          if-no-files-found: error
          retention-days: 5
  tester:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: binary-artifact
          path: target
      - name: Run Tester
        run: .ci/tester.sh
        shell: bash
